<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ScInviteMapper">
    <insert id="addScInvite" parameterType="DataMap">
        INSERT INTO SC_INVITE (INVITE_ID, TEACHER_ID, STUDENT_ID, CONTENT, CREATETIME)
        VALUES (#{INVITE_ID}, #{TEACHER_ID}, #{STUDENT_ID}, #{CONTENT}, #{CREATETIME})
    </insert>

    <select id="getScInvitesByTeacherId" parameterType="DataMap" resultType="DataMap">
        SELECT * FROM SC_INVITE WHERE TEACHER_ID = #{TEACHER_ID} ORDER BY CREATETIME DESC
    </select>

    <select id="getScInvitesByStudentId" parameterType="DataMap" resultType="DataMap">
        SELECT * FROM SC_INVITE WHERE STUDENT_ID = #{STUDENT_ID} ORDER BY CREATETIME DESC
    </select>
    
    <update id="setRead" parameterType="DataMap">
        UPDATE SC_INVITE SET ISREAD = true WHERE INVITE_ID = #{INVITE_ID}
    </update>
    
    <select id="getNoReadScInvites" parameterType="DataMap" resultType="DataMap">
        SELECT
        invite.*, DATE_FORMAT(invite.CREATETIME, "%m月%d日") AS SHOWDATE
        FROM
        SC_INVITE invite
        WHERE invite.STUDENT_ID = #{USER_ID}
        AND ISREAD = FALSE
        AND timestampdiff(MONTH,invite.CREATETIME,NOW()) &lt;= 3
        GROUP BY TEACHER_ID
        ORDER BY CREATETIME DESC
    </select>
    
    <select id="getCountNoReadScInvites" parameterType="DataMap" resultType="java.lang.Integer">
        SELECT
        COUNT(0)
        FROM
        SC_INVITE invite
        WHERE invite.STUDENT_ID = #{USER_ID}
        AND ISREAD = FALSE
        AND timestampdiff(MONTH,invite.CREATETIME,NOW()) &lt;= 3
    </select>
    
    <select id="getScInviteByStudentIdAndTeacherId" parameterType="DataMap" resultType="DataMap">
        SELECT * FROM SC_INVITE WHERE STUDENT_ID = #{STUDENT_ID} AND TEACHER_ID = #{TEACHER_ID}
    </select>

    <select id="getScInviteById" parameterType="DataMap" resultType="DataMap">
        SELECT
        invite.*, tea.HEADURL, tea.NICKNAME, school.NAME AS SCNAME,tea.USER_ID AS TEAUSER_ID
        FROM
        SC_INVITE invite,
        UR_COMPLETE_TEA tea
        LEFT JOIN SC_SCHOOL school ON tea.SCHOOL_ID = school.SCHOOL_ID
        WHERE INVITE_ID = #{INVITE_ID}
        AND invite.TEACHER_ID = tea.USER_ID
    </select>
</mapper>